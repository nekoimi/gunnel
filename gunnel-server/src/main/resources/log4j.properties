# log4j
log4j.rootLogger=DEBUG,console,file


#############
# 输出到控制台
#############

# 配置 console 输出到控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
# 配置 console 设置为自定义布局模式
log4j.appender.console.layout=org.apache.log4j.PatternLayout
# 2021-08-13 22:43:33 [main] DEBUG com.nekoimi.gunnel.server.GunnelServerStarter - hello world
log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %-20c - %m%n

################
# 输出到日志文件中
################

# 配置logfile输出到文件中 文件大小到达指定尺寸的时候产生新的日志文件
log4j.appender.file=org.apache.log4j.RollingFileAppender
# 保存编码格式
log4j.appender.file.Encoding=UTF-8
# 输出文件位置此为项目根目录下的logs文件夹中
log4j.appender.file.File=logs/root.log
# 后缀可以是KB,MB,GB达到该大小后创建新的日志文件
log4j.appender.file.MaxFileSize=10MB
# 设置滚定文件的最大值3 指可以产生root.log.1、root.log.2、root.log.3和root.log四个日志文件
log4j.appender.file.MaxBackupIndex=10
# 配置logfile为自定义布局模式
log4j.appender.file.layout=org.apache.log4j.PatternLayout
# 2021-08-13 22:43:33 [main] DEBUG com.nekoimi.gunnel.server.GunnelServerStarter - hello world
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %c - %m%n

# com.nekoimi -> package
log4j.logger.com.nekoimi=DEBUG,server.console,server.file
# 设置为false该日志信息就不会加入到rootLogger中了
log4j.additivity.com.nekoimi=false

#############
# 输出到控制台
#############

# 配置 console 输出到控制台
log4j.appender.server.console=org.apache.log4j.ConsoleAppender
# 配置 console 设置为自定义布局模式
log4j.appender.server.console.layout=org.apache.log4j.PatternLayout
# 2021-08-13 22:43:33 [main] DEBUG com.nekoimi.gunnel.server.GunnelServerStarter - hello world
log4j.appender.server.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %c - %m%n

################
# 输出到日志文件中
################

# 配置logfile输出到文件中 文件大小到达指定尺寸的时候产生新的日志文件
log4j.appender.server.file=org.apache.log4j.RollingFileAppender
# 保存编码格式
log4j.appender.server.file.Encoding=UTF-8
# 输出文件位置此为项目根目录下的logs文件夹中
log4j.appender.server.file.File=logs/server.log
# 后缀可以是KB,MB,GB达到该大小后创建新的日志文件
log4j.appender.server.file.MaxFileSize=10MB
# 设置滚定文件的最大值3 指可以产生root.log.1、root.log.2、root.log.3和root.log四个日志文件
log4j.appender.server.file.MaxBackupIndex=10
# 配置logfile为自定义布局模式
log4j.appender.server.file.layout=org.apache.log4j.PatternLayout
# 2021-08-13 22:43:33 [main] DEBUG com.nekoimi.gunnel.server.GunnelServerStarter - hello world
log4j.appender.server.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %c - %m%n